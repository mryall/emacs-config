* Completion Configuration
*** Minibuffer Completion
    Ivy is a interactive interface for anything that is completed
    in the minibuffer

    - https://oremacs.com/swiper/

  #+begin_src emacs-lisp

  (use-package counsel
    :ensure t
    :commands (swiper counsel-find-file counsel-M-x)
    :init
    (bind-key "C-s" 'swiper)
    (bind-key "C-x C-m" 'counsel-M-x)
    (bind-key "C-x C-f" 'counsel-find-file)
    :config
    (ivy-mode 1)
    (setq-default ivy-use-virtual-buffers t)
    ;; intentional space before end of string
    (setq-default ivy-count-format "(%d/%d) ")
    (setq-default ivy-initial-inputs-alist nil)
    (setq-default ivy-re-builders-alist '((swiper . ivy--regex-plus)
                                          (t . ivy--regex-fuzzy)))
    (setq-default ivy-extra-directories nil
                  (setq-default ivy-wrap t)))

  (with-eval-after-load 'counsel
    (let ((done (where-is-internal #'ivy-done     ivy-minibuffer-map t))
          (alt  (where-is-internal #'ivy-alt-done ivy-minibuffer-map t)))
      (define-key counsel-find-file-map done #'ivy-alt-done)
      (define-key counsel-find-file-map alt  #'ivy-done)))
  #+end_src

*** Command Suggestions
    Smex is a command suggestion tool that brings up recently used commands in
    the minibuffer. It is used by Ivy to order command suggestions by most
    recently used

  - https://github.com/nonsequitur/smex

    #+begin_src emacs-lisp

    (use-package smex
      :ensure t
      :after counsel
      :config
      (smex-initialize))
    #+end_src

*** Fuzzy Matching
    Flx is a fuzzy-matching package that is used by Ivy
    #+begin_src emacs-lisp

    (use-package flx :ensure t :after counsel)
    #+end_src

*** In-Buffer Autocompletion
    Use company for simple in-buffer autocompletion in most contexts

    - http://company-mode.github.io/

    #+BEGIN_SRC emacs-lisp

    (use-package company
      :ensure t
      :init
      (add-hook 'after-init-hook 'global-company-mode))
    #+END_SRC
