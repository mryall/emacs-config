* Command Execution Configuration
*** Smex
    Smex is a command suggestion tool that brings up recently used commands in
    the minibuffer

  - https://github.com/nonsequitur/smex

  #+begin_src emacs-lisp

  (use-package smex
    :ensure t
    :after counsel
    ;; :init
    ;; (bind-key "C-x C-m" 'smex)
    ;; (bind-key "C-c C-m" 'smex)
    :config
    (smex-initialize))
  #+end_src

*** Ido Mode
  #+begin_src emacs-lisp

  ;; (use-package ido
  ;;   :ensure t
  ;;   :config
  ;;   (ido-mode t)
  ;;   (ido-everywhere 1)
  ;;   (setq ido-enable-flex-matching t))
  #+end_src

*** Ivy
  #+begin_src emacs-lisp

  (use-package counsel
    :ensure t
    :commands (swiper counsel-find-file counsel-M-x)
    :init
    (bind-key "C-s" 'swiper)
    (bind-key "C-x C-m" 'counsel-M-x)
    (bind-key "C-x C-f" 'counsel-find-file)
    :config
    (ivy-mode 1)
    (setq-default ivy-use-virtual-buffers t)
    ;; intentional space before end of string
    (setq-default ivy-count-format "(%d/%d) ")
    (setq-default ivy-initial-inputs-alist nil)
    (setq-default ivy-re-builders-alist
                  '((t . ivy--regex-plus) (t . ivy--regex-fuzzy)))
    (setq-default ivy-extra-directories nil))

    (use-package flx :ensure t :after counsel)

  (with-eval-after-load 'counsel
    (let ((done (where-is-internal #'ivy-done     ivy-minibuffer-map t))
          (alt  (where-is-internal #'ivy-alt-done ivy-minibuffer-map t)))
      (define-key counsel-find-file-map done #'ivy-alt-done)
      (define-key counsel-find-file-map alt  #'ivy-done)))
  #+end_src
