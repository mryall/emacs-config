; -*- mode: Emacs-Lisp;-*-

;; user info
(setq rcirc-default-nick "mr_yall")
(setq rcirc-default-user-name "mr_yall")
(setq rcirc-default-full-name "Matthew Ryall")
(setq rcirc-fill-column 'frame-width)

;; server info
(setq bitlbee-host "local-bitlbee")
(setq rcirc-server-alist
      '(("irc.nap" :channels ("#idlechat" "#backend" "#android" "#techops"
                              "#openstack" "#incident" "#release" "#commando"
                              "#cando" "#payments" "#arch" "#build"))))

;; log everything
(setq rcirc-log-flag t)
(setq rcirc-log-directory "~/.rcirclog")

;;(rcirc nil)

;; (defun rcirc-load (location)
;;   (setq rcirc-server-alist nil)
;;   (cond
;;    ((eq location "work")
;;     (add-to-list 'rcirc-server-alist
;;                  '("irc.nap" :channels ("#tech" "#backend" "#cview" "#cando" "#payments"))))
;;    ((eq location "home")
;;     (add-to-list 'rcirc-server-alist
;;                  '(("local-bitlbee" :port 2000 :channels ("&bitlbee"))
;;                    ("local-bip"     :port 2001)))))
;;   (rcirc nil))

(eval-after-load 'rcirc
  '(progn
     ;; notify me
     (require 'rcirc-notify)
     (require 'rcirc-notify-mode)))

;; hooky goodness
(add-hook 'rcirc-mode-hook
          (lambda () (progn (turn-off-auto-fill)
                       (turn-on-flyspell))))

;; auto-auth
(setq rcirc-authinfo
      '(("local-bitlbee" bitlbee "mryall" "mryall")))

(defun bitlbee-rcirc-process (bitlbee-host)
  ;; Return the first bitlbee process
  (first (bitlbee-process-list bitlbee-host)))

(defun bitlbee-process-list (bitlbee-host)
  ;; List of bitlbee processes
  (delq nil
        (mapcar (lambda (process)
                  (if (equal bitlbee-host (process-name process))
                      process))
                (rcirc-process-list))))

(defun rcirc-bitlbee (bitlbee-host bitlbee-port)
  (interactive "sHost: \nsPort: ")
  (let ((rcirc-proc))
    (if (null (bitlbee-process-list bitlbee-host))
        (setf rcirc-proc (rcirc-connect bitlbee-host bitlbee-port))
      (setf rcirc-proc (bitlbee-rcirc-process bitlbee-host)))
    (with-rcirc-process-buffer rcirc-proc
      (when (aget rcirc-buffer-alist "&bitlbee")
        (rcirc-join-channels rcirc-proc '("&bitlbee"))))
    (switch-to-buffer (concat "&bitlbee@" bitlbee-host))))


(defun th-rcirc-notification (process sender response target text)
  (let ((my-nick (rcirc-nick process)))
    (when (and (string= response "PRIVMSG")
               (not (string= sender my-nick))
               (or
                ;; BitlBee IM messages
                (string-match "localhost" (format "%s" process))
                ;; Messages that mention my name
                (string-match my-nick text)))
      (th-notifications-add (concat "rcirc: " target)))))

(add-hook 'rcirc-print-hooks 'th-rcirc-notification)

(defun th-notifications-add (str)
  (interactive "sNotification: ")
  (start-process "notifications-add" nil
                 "stumpish" "notifications-add" str))

;;

(provide 'mjr-irc)
